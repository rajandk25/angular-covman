{"version":3,"sources":["webpack:///src/app/common/models/parent.model.ts","webpack:///src/app/common/models/user.model.ts","webpack:///src/app/features/register-user/register-user.component.ts","webpack:///src/app/features/register-user/register-user.component.html","webpack:///src/app/features/register-user/register-user.module.ts","webpack:///src/app/features/register-user/register-user.routing.ts"],"names":["Parent","id","user","User","firstName","password","email","lastName","role","RegisterUserComponent","userService","router","fb","toastService","isError","userform","group","required","compose","minLength","parent","firstname","controls","value","lastname","addParent","subscribe","data","console","log","navigate","addSingle","error","message","handleRegister","routeToLogin","selector","templateUrl","styleUrls","RegisterUserModule","imports","declarations","routes","path","component","RegisterUserRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;AAAA;;;AAAA;AAAA;AAAA;;UAAaA,M,GACT,kBAAc;AAAA;;AACV,aAAKC,EAAL,GAAU,IAAV;AACA,aAAKC,IAAL,GAAY,IAAZ;AACH,O;;;;;;;;;;;;;;;;;ACNL;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,I,GACT,gBAAc;AAAA;;AACV,aAAKF,EAAL,GAAU,IAAV;AACA,aAAKG,SAAL,GAAiB,IAAjB;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,IAAL,GAAY,IAAZ;AACH,O;;;;;;;;;;;;;;;;;ACTL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYU;;AACE;;AACF;;;;;;AAUE;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AAUE;;;;;;AAEA;;;;;;AAHF;;AACE;;AAEA;;AAEF;;;;;;AAHa;;AAAA;;AACyC;;AAAA;;;;;;AAYpD;;;;;;AAEA;;;;;;AAHF;;AACE;;AAEA;;AAEF;;;;;;AAHI;;AAAA;;AAEA;;AAAA;;;;UDlDHC,qB;AAMX,uCAAoBC,WAApB,EAA0DC,MAA1D,EAAkFC,EAAlF,EAA2GC,YAA3G,EAAuI;AAAA;;AAAnH,eAAAH,WAAA,GAAAA,WAAA;AAAsC,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAAC,EAAA,GAAAA,EAAA;AAAyB,eAAAC,YAAA,GAAAA,YAAA;AAF3G,eAAAC,OAAA,GAAmB,KAAnB;AAE0I;;;;qCAE/H;AACT,iBAAKC,QAAL,GAAgB,KAAKH,EAAL,CAAQI,KAAR,CAAc;AAC5B,2BAAa,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,QAA/B,CADe;AAE5B,0BAAY,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWA,QAA/B,CAFgB;AAG5B,yBAAW,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWA,QAAZ,EAAsB,0DAAWX,KAAjC,CAApB,CAHiB;AAI5B,0BAAY,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWY,OAAX,CAAmB,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CAApB;AAJgB,aAAd,CAAhB;AAOD;;;2CAEgB;AAAA;;AACf,iBAAKL,OAAL,GAAe,KAAf,CADe,CAEf;;AACA,gBAAIM,MAAM,GAAW,IAAI,kEAAJ,EAArB;AAEA,gBAAIC,SAAS,GAAW,KAAKN,QAAL,CAAcO,QAAd,CAAuB,WAAvB,EAAoCC,KAA5D;AACA,gBAAIC,QAAQ,GAAW,KAAKT,QAAL,CAAcO,QAAd,CAAuB,UAAvB,EAAmCC,KAA1D;AACA,gBAAIjB,KAAK,GAAW,KAAKS,QAAL,CAAcO,QAAd,CAAuB,SAAvB,EAAkCC,KAAtD;AACA,gBAAIlB,QAAQ,GAAW,KAAKU,QAAL,CAAcO,QAAd,CAAuB,UAAvB,EAAmCC,KAA1D,CARe,CAUf;;AACA,gBAAIrB,IAAI,GAAS,IAAI,8DAAJ,EAAjB;AACAA,gBAAI,CAACE,SAAL,GAAiBiB,SAAjB;AACAnB,gBAAI,CAACK,QAAL,GAAgBiB,QAAhB;AACAtB,gBAAI,CAACI,KAAL,GAAaA,KAAb;AACAJ,gBAAI,CAACG,QAAL,GAAgBA,QAAhB;AAEAe,kBAAM,CAAClB,IAAP,GAAcA,IAAd,CAjBe,CAmBf;;AACA,iBAAKQ,WAAL,CAAiBe,SAAjB,CAA2BL,MAA3B,EAAmCM,SAAnC,CACE,UAACC,IAAD,EAAkB;AAChBC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,kBAAGA,IAAH,EAAS;AACP,qBAAI,CAAChB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA,qBAAI,CAACjB,YAAL,CAAkBkB,SAAlB,CAA4B,SAA5B,EAAuC,EAAvC,EAA2C,0BAA3C;AACH;AACF,aARD,EASA,UAACC,KAAD,EAA8B;AAC5B,mBAAI,CAAClB,OAAL,GAAe,IAAf;;AACA,mBAAI,CAACD,YAAL,CAAkBkB,SAAlB,CAA4B,OAA5B,EAAqC,EAArC,EAAyC,4CAA4CC,KAAK,CAACC,OAA3F;AACD,aAZD;AAaD;;;yCAEc;AACb,iBAAKtB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;yBAvDUrB,qB,EAAqB,0J,EAAA,uH,EAAA,2H,EAAA,mJ;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA,iB;AAAA,e;AAAA,24D;AAAA;AAAA;ACdlC;;AACE;;AAEE;;AACE;;AAA6B;AAAA,qBAAY,IAAAyB,cAAA,EAAZ;AAA4B,aAA5B;;AAC3B;;AACE;;AACA;;AAEA;;AAEE;;AACF;;AAGA;;AAEE;;AACE;;AACE;;AAAkC;;AAA0B;;AAC5D;;AAEF;;AACF;;AACA;;AAIA;;AACE;;AACE;;AAAkC;;AAA0B;;AAC5D;;AAEF;;AACF;;AACA;;AAIA;;AACE;;AACE;;AAAkC;;AAAwB;;AAC1D;;AAEF;;AACF;;AACA;;AAOA;;AACE;;AACE;;AAAkC;;AAAyB;;AAC3D;;AAEF;;AACF;;AACA;;AAOF;;AAEA;;AACA;;AAEA;;AACE;;AACE;;AACE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAC/B;;AACA;;AACE;;AACE;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAC7B;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAlFY;;AAAA;;AAQmB;;AAAA;;AAYE;;AAAA;;AAWA;;AAAA;;AAWA;;AAAA;;AAcA;;AAAA;;AAcqD;;AAAA;;;;;;;;;wED5DzE1B,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT2B,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBAPpB,CACP,4DADO,EAEP,8GAFO,EAGP,yEAHO,CAOoB;;;;4HAAlBA,kB,EAAkB;AAAA,yBAFd,4GAEc;AAFO,oBAJlC,4DAIkC,EAHlC,8GAGkC,EAFlC,yEAEkC;AAEP,S;AAJZ,O;;;;;wEAINA,kB,EAAkB;gBAR9B,sDAQ8B;iBARrB;AACRC,mBAAO,EAAE,CACP,4DADO,EAEP,8GAFO,EAGP,yEAHO,CADD;AAMRC,wBAAY,EAAE,CAAC,4GAAD;AANN,W;AAQqB,U;;;;;;;;;;;;;;;;;;ACd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE;AAFf,OADmB,CAAvB;;UAWaC,yB;;;;;cAAAA;;;;2BAAAA,yB;AAAyB,S;AAAA,kBAHzB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGyB,EAFxB,4DAEwB;;;;4HAAzBG,yB,EAAyB;AAAA;AAAA,oBAFxB,4DAEwB;AAAA,S;AAFZ,O;;;;;wEAEbA,yB,EAAyB;gBAJrC,sDAIqC;iBAJ5B;AACNL,mBAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADH;AAENK,mBAAO,EAAE,CAAC,4DAAD;AAFH,W;AAI4B,U","file":"src-app-features-register-user-register-user-module-es5.js","sourcesContent":["\r\nimport { User } from './user.model';\r\n\r\nexport class Parent {\r\n    constructor() {\r\n        this.id = null;\r\n        this.user = null;\r\n    }\r\n\r\n    id: number;\r\n    user: User;\r\n}\r\n","\r\nexport class User {\r\n    constructor() {\r\n        this.id = null;\r\n        this.firstName = null;\r\n        this.password = null;\r\n        this.email = null;\r\n        this.lastName = null;\r\n        this.role = null;\r\n    }\r\n\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    password: string;\r\n    email: string;\r\n    role: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ToastService } from 'src/app/common/services/toast.service';\r\nimport { UserDataService } from 'src/app/common/services/user-data.service';\r\nimport { Parent } from './../../common/models/parent.model';\r\nimport { User } from './../../common/models/user.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: 'register-user.component.html',\r\n  styleUrls: ['register-user.component.css']\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n\r\n  userform: FormGroup;\r\n\r\n  isError: boolean = false;\r\n\r\n  constructor(private userService: UserDataService, private router: Router, private fb: FormBuilder, private toastService: ToastService) { }\r\n\r\n  ngOnInit() {\r\n    this.userform = this.fb.group({\r\n      'firstName': new FormControl('', Validators.required),\r\n      'lastName': new FormControl('', Validators.required),\r\n      'emailId': new FormControl('', [Validators.required, Validators.email]),\r\n      'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)]))\r\n    });\r\n\r\n  }\r\n\r\n  handleRegister() {\r\n    this.isError = false;\r\n    //create parent to pass to the service\r\n    let parent: Parent = new Parent();\r\n\r\n    let firstname: string = this.userform.controls[\"firstName\"].value;\r\n    let lastname: string = this.userform.controls[\"lastName\"].value;\r\n    let email: string = this.userform.controls[\"emailId\"].value;\r\n    let password: string = this.userform.controls[\"password\"].value\r\n\r\n    //parent need User object, so create that and set to the parent\r\n    let user: User = new User();\r\n    user.firstName = firstname;\r\n    user.lastName = lastname;\r\n    user.email = email;\r\n    user.password = password;\r\n\r\n    parent.user = user;\r\n\r\n    //subscribe to the service to get the response\r\n    this.userService.addParent(parent).subscribe(\r\n      (data: Parent) => {\r\n        console.log(data);\r\n        \r\n        if(data) {\r\n          this.router.navigate(['/login']);\r\n          this.toastService.addSingle(\"success\", \"\", \"Successfully registered.\");\r\n      }\r\n    }, \r\n    (error: HttpErrorResponse) => {\r\n      this.isError = true;\r\n      this.toastService.addSingle(\"error\", \"\", \"Error while registering. Please retry. \" + error.message);\r\n    });\r\n  }\r\n\r\n  routeToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"user-regisration\">\r\n  <div class=\"p-grid p-nogutter p-justify-center p-align-center\" style=\"height:100%\">\r\n\r\n    <div class=\"p-col-5\">\r\n      <form [formGroup]=\"userform\" (ngSubmit)=\"handleRegister()\">\r\n        <p-panel header=\"Register\">\r\n          <br/>\r\n          <br/>\r\n\r\n          <div class=\"p-grid p-justify-center p-align-center\">\r\n\r\n            <br/>\r\n          <div class=\"p-col-8\" *ngIf=\"isError\">\r\n            <p-message severity=\"error\" text=\"Error Registering the user. Please retry.\"></p-message>\r\n          </div>\r\n          <br/>\r\n\r\n            <div class=\"p-col-8\">\r\n              <div class=\"ui-inputgroup\">\r\n                <span class=\"ui-inputgroup-addon\"><i class=\"fa fa-user\"></i></span>\r\n                <input id=\"float-input-firstname\" type=\"text\" size=\"30\" pInputText formControlName=\"firstName\"\r\n                  placeholder=\"First Name\" required>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-col-8\" *ngIf=\"userform.controls['firstName'].errors && userform.controls['firstName'].dirty\">\r\n              <p-message severity=\"error\" text=\"First name is required\"></p-message>\r\n            </div>\r\n\r\n            <div class=\"p-col-8\">\r\n              <div class=\"ui-inputgroup\">\r\n                <span class=\"ui-inputgroup-addon\"><i class=\"fa fa-user\"></i></span>\r\n                <input id=\"float-input-lastname\" type=\"text\" size=\"30\" pInputText formControlName=\"lastName\"\r\n                       placeholder=\"Last Name\" required>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-col-8\" *ngIf=\"userform.controls['lastName'].errors && userform.controls['lastName'].dirty\">\r\n              <p-message severity=\"error\" text=\"Last name is required\"></p-message>\r\n            </div>\r\n\r\n            <div class=\"p-col-8\">\r\n              <div class=\"ui-inputgroup\">\r\n                <span class=\"ui-inputgroup-addon\"><i class=\"fa fa-at\"></i></span>\r\n                <input id=\"float-input-emailid\" type=\"email\" size=\"30\" pInputText formControlName=\"emailId\"\r\n                       placeholder=\"Parent Email Id\" required>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-col-8\" *ngIf=\"userform.controls['emailId'].errors && userform.controls['emailId'].dirty\">\r\n              <p-message severity=\"error\" text=\"Email is required\"\r\n                         *ngIf=\"userform.controls['emailId'].errors['required']\"></p-message>\r\n              <p-message severity=\"error\" text=\"Email is invalid\" *ngIf=\"userform.controls['emailId'].errors['email']\">\r\n              </p-message>\r\n            </div>\r\n\r\n            <div class=\"p-col-8\">\r\n              <div class=\"ui-inputgroup\">\r\n                <span class=\"ui-inputgroup-addon\"><i class=\"fa fa-key\"></i></span>\r\n                <input id=\"float-input-password\" type=\"password\" size=\"30\" pInputText formControlName=\"password\"\r\n                  placeholder=\"Password\" required>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-col-8\" *ngIf=\"userform.controls['password'].errors && userform.controls['password'].dirty\">\r\n              <p-message severity=\"error\" text=\"Password is required\"\r\n                *ngIf=\"userform.controls['password'].errors['required']\"></p-message>\r\n              <p-message severity=\"error\" text=\"Minimum 6 characters required.\"\r\n                *ngIf=\"userform.controls['password'].errors['minlength'] \"></p-message>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <div class=\"p-grid p-justify-center p-align-center\">\r\n            <div class=\"p-col-3\">\r\n              <button pButton type=\"button\" label=\"Register\" class=\"ui-button-raised\" [disabled]=\"!userform.valid\"\r\n                (click)=\"handleRegister()\"></button>\r\n            </div>\r\n            <div class=\"p-col-3\">\r\n              <button pButton type=\"button\" label=\"Login\" class=\"ui-button-raised\"\r\n                (click)=\"routeToLogin()\"></button>\r\n            </div>\r\n          </div>\r\n        </p-panel>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterUserComponent } from 'src/app/features/register-user/register-user.component';\r\nimport { RegisterUserRoutingModule } from 'src/app/features/register-user/register-user.routing';\r\nimport { AppCommonModule } from 'src/app/app.common.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegisterUserRoutingModule,\r\n    AppCommonModule\r\n  ],\r\n  declarations: [RegisterUserComponent]\r\n})\r\nexport class RegisterUserModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterUserComponent } from 'src/app/features/register-user/register-user.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RegisterUserComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RegisterUserRoutingModule { }"]}